name: Build VCV Rack Plugin

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up dependencies for Linux/macOS
      if: runner.os != 'Windows'
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt update && sudo apt install -y build-essential cmake curl zip
        elif [ "$RUNNER_OS" == "macOS" ]; then
          brew install cmake zip || true
        fi
      shell: bash

    - name: Set up MSVC for Windows
      if: runner.os == 'Windows'
      uses: ilammy/msvc-dev-cmd@v1

    - name: Download Rack SDK 2.6.4
      run: |
        curl -L -o rack-sdk.zip https://vcvrack.com/downloads/Rack-SDK-2.6.4-${{ runner.os == 'Windows' && 'win' || (runner.os == 'macOS' && 'mac' || 'linux') }}.zip
        unzip -q rack-sdk.zip
        mv Rack-SDK-2.6.4* rack-sdk
        echo "RACK_DIR=${{ github.workspace }}/rack-sdk" >> $GITHUB_ENV
      shell: bash

    - name: Build plugin
      run: |
        make clean
        make
      env:
        RACK_DIR: ${{ env.RACK_DIR }}

    - name: Package plugin
      run: |
        mkdir -p dist
        zip -r dist/${{ runner.os }}-plugin.vcvplugin res/ plugin.json LICENSE* build/ -x '*.o' '*.cpp' '*.hpp'
      shell: bash

    - name: Upload plugin artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ runner.os }}-plugin
        path: dist/
